{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from 'react';\nimport SignatureCanvas from 'react-signature-canvas';\nimport Button from '../../../components/Button';\nexport default function DrawingCanvas() {\n  // useStates\n  const sigCanvas = useRef({});\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(null);\n  const {\n    0: resultArray,\n    1: setResultArray\n  } = useState(null);\n  const {\n    0: height,\n    1: setHeight\n  } = useState(null);\n  const {\n    0: width,\n    1: setWidth\n  } = useState(null); // Canvas Configuration\n\n  if (false) {\n    useEffect(() => setHeight(document.children[0].clientHeight), [document.children[0].clientHeight]);\n    useEffect(() => setWidth(document.children[0].clientWidth), [document.children[0].clientWidth]);\n  }\n\n  const canvasWidth = Math.min(height, width) / 2;\n  const brushSize = (canvasWidth / 30).toString(10); // Functions\n\n  const clearPad = () => {\n    sigCanvas.current.clear();\n    setImageURL(null);\n    setResultArray(null);\n  };\n\n  const submitPad = () => {\n    let submittedImage = sigCanvas.current.getTrimmedCanvas();\n    let result = processImage(submittedImage);\n    apiCall(result[1]);\n    setImageURL(result[0].toDataURL(\"image/png\"));\n  }; // Query our AI model\n\n\n  const apiCall = image_array => {\n    const model_url = '/api/v1/models/digit_model:predict';\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = false; // get a callback when the server responds\n\n    xhr.addEventListener('load', () => {\n      // Get results and process\n      if (xhr.responseText) {\n        let reponse = JSON.parse(xhr.responseText);\n        processResult(reponse);\n      }\n    });\n    xhr.open('POST', model_url);\n    xhr.send(_JSON$stringify({\n      \"instances\": image_array\n    }));\n  };\n\n  const processResult = reponse => {\n    let unsorted_array = reponse[\"predictions\"][0];\n    let sorted_array = Array(unsorted_array.length); // Get all results above 0.00%\n\n    for (var i = 0; i < unsorted_array.length; i++) {\n      let index = unsorted_array.indexOf(Math.max(...unsorted_array));\n      let confidence = (unsorted_array[index] * 100).toFixed(2);\n\n      if (confidence > 0) {\n        sorted_array[i] = [index, confidence];\n        unsorted_array[index] = 0;\n      }\n    }\n\n    setResultArray(sorted_array);\n  };\n\n  const processImage = img => {\n    // Scale image\n    const canvas = document.createElement('canvas');\n    const scale = Math.min(20 / img.width, 20 / img.height);\n    canvas.width = 28;\n    canvas.height = 28;\n    const cctx = canvas.getContext('2d');\n    cctx.imageSmoothingEnabled = true;\n    const scaled_width = img.width * scale;\n    const scaled_height = img.height * scale;\n    const dx = (28 - scaled_width) / 2;\n    const dy = (28 - scaled_height) / 2;\n    cctx.drawImage(img, dx, dy, scaled_width, scaled_height); // Turn into 2D array of 28x28\n\n    const image_array = Array(28);\n    var column_count = 0;\n    var row_count = 0;\n    var column_array = Array(28); // invert colors, make black and white and remove alpha\n\n    var imgData = cctx.getImageData(0, 0, canvas.width, canvas.height);\n    var i;\n\n    for (i = 0; i < imgData.data.length; i += 4) {\n      // Fill array\n      if (column_count >= 28) {\n        column_count = 0;\n        image_array[row_count] = column_array; // Reset column_array\n\n        column_array = Array(28);\n        row_count++;\n      }\n\n      if (imgData.data[i + 3] > 0) {\n        // Used to visualize image for debugging, can be discarded\n        imgData.data[i] = 255;\n        imgData.data[i + 1] = 255;\n        imgData.data[i + 2] = 255; // Convert to either 0 or 1\n\n        column_array[column_count] = 1;\n      } else {\n        // Used to visualize image for debugging, can be discarded\n        imgData.data[i] = 0;\n        imgData.data[i + 1] = 0;\n        imgData.data[i + 2] = 0; // Convert to either 0 or 1\n\n        column_array[column_count] = 0;\n      }\n\n      imgData.data[i + 3] = 255;\n      column_count++;\n    } // Lazy add final row empty\n\n\n    var final_row = Array(28);\n\n    for (var i = 0; i < final_row.length; i++) {\n      final_row[i] = 0;\n    }\n\n    image_array[27] = final_row; // Print out array\n    // console.log(image_array);\n\n    cctx.putImageData(imgData, 0, 0);\n    let newImage = canvas;\n    return [newImage, image_array];\n  };\n\n  const result_graph = resultArray => {\n    return __jsx(\"div\", null, resultArray.map((result, index) => __jsx(\"p\", {\n      key: index\n    }, \"Number: \", result[0], \" \", __jsx(\"br\", null), \"Confidence: \", result[1], \"%\")));\n  };\n\n  return __jsx(\"div\", null, __jsx(SignatureCanvas, {\n    ref: sigCanvas,\n    penColor: \"black\",\n    velocityFilterWeight: \"0\",\n    maxWidth: brushSize,\n    dotSize: \"0\",\n    canvasProps: {\n      width: canvasWidth,\n      height: canvasWidth,\n      className: 'signatureCanvas'\n    }\n  }), __jsx(\"div\", {\n    className: \"jsx-619635244\" + \" \" + \"button-wrapper\"\n  }, __jsx(Button, {\n    onClick: clearPad,\n    isClear: \"true\"\n  }, \"clear\"), __jsx(Button, {\n    onClick: submitPad\n  }, \"submit\"), __jsx(_JSXStyle, {\n    id: \"619635244\"\n  }, \".jsx-619635244{padding:5vh;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9raWV0aG8vUmVwb3Mvc3R1ZmZieWtpZXQuY29tL3BhZ2VzL3Byb2plY3RzL2NvbXBvbmVudHMvRHJhd2luZ0NhbnZhcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUErSm9CLEFBR1UsWUFBQyIsImZpbGUiOiIvVXNlcnMva2lldGhvL1JlcG9zL3N0dWZmYnlraWV0LmNvbS9wYWdlcy9wcm9qZWN0cy9jb21wb25lbnRzL0RyYXdpbmdDYW52YXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3VzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNpZ25hdHVyZUNhbnZhcyBmcm9tICdyZWFjdC1zaWduYXR1cmUtY2FudmFzJ1xuaW1wb3J0IEJ1dHRvbiBmcm9tICcuLi8uLi8uLi9jb21wb25lbnRzL0J1dHRvbic7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRHJhd2luZ0NhbnZhcygpe1xuICAvLyB1c2VTdGF0ZXNcbiAgY29uc3Qgc2lnQ2FudmFzID0gdXNlUmVmKHt9KTtcbiAgY29uc3QgW2ltYWdlVVJMLCBzZXRJbWFnZVVSTF0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW3Jlc3VsdEFycmF5LCBzZXRSZXN1bHRBcnJheV0gPSB1c2VTdGF0ZShudWxsKTtcbiAgY29uc3QgW2hlaWdodCwgc2V0SGVpZ2h0XSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFt3aWR0aCwgc2V0V2lkdGhdID0gdXNlU3RhdGUobnVsbClcbiAgLy8gQ2FudmFzIENvbmZpZ3VyYXRpb25cblxuICBpZiAocHJvY2Vzcy5icm93c2VyKSB7XG4gICAgdXNlRWZmZWN0KCgpID0+IHNldEhlaWdodChkb2N1bWVudC5jaGlsZHJlblswXS5jbGllbnRIZWlnaHQpLCBbZG9jdW1lbnQuY2hpbGRyZW5bMF0uY2xpZW50SGVpZ2h0XSlcbiAgICB1c2VFZmZlY3QoKCkgPT4gc2V0V2lkdGgoZG9jdW1lbnQuY2hpbGRyZW5bMF0uY2xpZW50V2lkdGgpLCBbZG9jdW1lbnQuY2hpbGRyZW5bMF0uY2xpZW50V2lkdGhdKVxuICB9XG4gIGNvbnN0IGNhbnZhc1dpZHRoID0gIE1hdGgubWluKGhlaWdodCwgd2lkdGgpLzI7XG4gIGNvbnN0IGJydXNoU2l6ZSA9IChjYW52YXNXaWR0aC8zMCkudG9TdHJpbmcoMTApO1xuXG4gIC8vIEZ1bmN0aW9uc1xuICBjb25zdCBjbGVhclBhZCA9ICgpID0+IHtcbiAgICBzaWdDYW52YXMuY3VycmVudC5jbGVhcigpO1xuICAgIHNldEltYWdlVVJMKG51bGwpO1xuICAgIHNldFJlc3VsdEFycmF5KG51bGwpO1xuICB9O1xuICBjb25zdCBzdWJtaXRQYWQgPSAoKSA9PiB7XG4gICAgbGV0IHN1Ym1pdHRlZEltYWdlID0gc2lnQ2FudmFzLmN1cnJlbnQuZ2V0VHJpbW1lZENhbnZhcygpO1xuICAgIGxldCByZXN1bHQgPSBwcm9jZXNzSW1hZ2Uoc3VibWl0dGVkSW1hZ2UpXG4gICAgYXBpQ2FsbChyZXN1bHRbMV0pO1xuICAgIHNldEltYWdlVVJMKHJlc3VsdFswXS50b0RhdGFVUkwoXCJpbWFnZS9wbmdcIikpO1xuICB9O1xuXG4gIC8vIFF1ZXJ5IG91ciBBSSBtb2RlbFxuICBjb25zdCBhcGlDYWxsID0gKGltYWdlX2FycmF5KSA9PiB7XG4gICAgY29uc3QgbW9kZWxfdXJsID0gJy9hcGkvdjEvbW9kZWxzL2RpZ2l0X21vZGVsOnByZWRpY3QnO1xuICAgIHZhciB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4aHIud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7XG4gICAgLy8gZ2V0IGEgY2FsbGJhY2sgd2hlbiB0aGUgc2VydmVyIHJlc3BvbmRzXG4gICAgeGhyLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gICAgICAvLyBHZXQgcmVzdWx0cyBhbmQgcHJvY2Vzc1xuICAgICAgaWYgKHhoci5yZXNwb25zZVRleHQpe1xuICAgICAgICBsZXQgcmVwb25zZSA9IEpTT04ucGFyc2UoeGhyLnJlc3BvbnNlVGV4dCk7XG4gICAgICAgIHByb2Nlc3NSZXN1bHQocmVwb25zZSlcbiAgICAgIH1cbiAgICB9KTtcbiAgICB4aHIub3BlbignUE9TVCcsIG1vZGVsX3VybCk7XG4gICAgeGhyLnNlbmQoSlNPTi5zdHJpbmdpZnkoeyBcImluc3RhbmNlc1wiOiBpbWFnZV9hcnJheSB9KSk7XG4gIH1cblxuICBjb25zdCBwcm9jZXNzUmVzdWx0ID0gKHJlcG9uc2UpID0+IHtcbiAgICBsZXQgdW5zb3J0ZWRfYXJyYXkgPSByZXBvbnNlW1wicHJlZGljdGlvbnNcIl1bMF07XG4gICAgbGV0IHNvcnRlZF9hcnJheSA9IEFycmF5KHVuc29ydGVkX2FycmF5Lmxlbmd0aCk7XG4gICAgLy8gR2V0IGFsbCByZXN1bHRzIGFib3ZlIDAuMDAlXG4gICAgZm9yICh2YXIgaSA9IDA7IGk8IHVuc29ydGVkX2FycmF5Lmxlbmd0aDsgaSsrKXtcbiAgICAgIGxldCBpbmRleCA9IHVuc29ydGVkX2FycmF5LmluZGV4T2YoTWF0aC5tYXgoLi4udW5zb3J0ZWRfYXJyYXkpKTtcbiAgICAgIGxldCBjb25maWRlbmNlID0gKHVuc29ydGVkX2FycmF5W2luZGV4XSoxMDApLnRvRml4ZWQoMilcbiAgICAgIGlmIChjb25maWRlbmNlID4gMCl7XG4gICAgICAgIHNvcnRlZF9hcnJheVtpXSA9IFtpbmRleCwgY29uZmlkZW5jZV07XG4gICAgICAgIHVuc29ydGVkX2FycmF5W2luZGV4XSA9IDA7XG4gICAgICB9XG4gICAgfVxuICAgIHNldFJlc3VsdEFycmF5KHNvcnRlZF9hcnJheSk7XG4gIH1cbiAgY29uc3QgcHJvY2Vzc0ltYWdlID0gKGltZykgPT4ge1xuICAgIC8vIFNjYWxlIGltYWdlXG4gICAgY29uc3QgY2FudmFzID1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbiAgICBjb25zdCBzY2FsZSA9IE1hdGgubWluKDIwL2ltZy53aWR0aCwgMjAvaW1nLmhlaWdodCk7XG4gICAgY2FudmFzLndpZHRoID0gMjg7XG4gICAgY2FudmFzLmhlaWdodCA9IDI4O1xuICAgIGNvbnN0IGNjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICBjY3R4LmltYWdlU21vb3RoaW5nRW5hYmxlZCA9IHRydWU7XG4gICAgY29uc3Qgc2NhbGVkX3dpZHRoID0gaW1nLndpZHRoKnNjYWxlO1xuICAgIGNvbnN0IHNjYWxlZF9oZWlnaHQgPSBpbWcuaGVpZ2h0KnNjYWxlO1xuICAgIGNvbnN0IGR4ID0gKDI4IC0gc2NhbGVkX3dpZHRoKS8yO1xuICAgIGNvbnN0IGR5ID0gKDI4IC0gc2NhbGVkX2hlaWdodCkvMjtcbiAgICBjY3R4LmRyYXdJbWFnZShpbWcsIGR4LCBkeSwgc2NhbGVkX3dpZHRoLCBzY2FsZWRfaGVpZ2h0KTtcblxuXG4gICAgLy8gVHVybiBpbnRvIDJEIGFycmF5IG9mIDI4eDI4XG4gICAgY29uc3QgaW1hZ2VfYXJyYXkgPSBBcnJheSgyOCk7XG4gICAgdmFyIGNvbHVtbl9jb3VudCA9IDBcbiAgICB2YXIgcm93X2NvdW50ID0gMFxuICAgIHZhciBjb2x1bW5fYXJyYXkgPSBBcnJheSgyOCk7XG5cbiAgICAvLyBpbnZlcnQgY29sb3JzLCBtYWtlIGJsYWNrIGFuZCB3aGl0ZSBhbmQgcmVtb3ZlIGFscGhhXG4gICAgdmFyIGltZ0RhdGEgPSBjY3R4LmdldEltYWdlRGF0YSgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuICAgIHZhciBpO1xuICAgIGZvciAoaSA9IDA7IGkgPCBpbWdEYXRhLmRhdGEubGVuZ3RoOyBpICs9IDQpIHtcblxuICAgICAgLy8gRmlsbCBhcnJheVxuICAgICAgaWYgKGNvbHVtbl9jb3VudCA+PSAyOCl7XG4gICAgICAgIGNvbHVtbl9jb3VudCA9IDA7XG4gICAgICAgIGltYWdlX2FycmF5W3Jvd19jb3VudF0gPSBjb2x1bW5fYXJyYXk7XG4gICAgICAgIC8vIFJlc2V0IGNvbHVtbl9hcnJheVxuICAgICAgICBjb2x1bW5fYXJyYXkgPSBBcnJheSgyOCk7XG4gICAgICAgIHJvd19jb3VudCsrO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW1nRGF0YS5kYXRhW2kgKyAzXSA+IDApe1xuICAgICAgICAvLyBVc2VkIHRvIHZpc3VhbGl6ZSBpbWFnZSBmb3IgZGVidWdnaW5nLCBjYW4gYmUgZGlzY2FyZGVkXG4gICAgICAgIGltZ0RhdGEuZGF0YVtpXSA9IDI1NTtcbiAgICAgICAgaW1nRGF0YS5kYXRhW2krMV0gPSAyNTU7XG4gICAgICAgIGltZ0RhdGEuZGF0YVtpKzJdID0gMjU1O1xuICAgICAgICAvLyBDb252ZXJ0IHRvIGVpdGhlciAwIG9yIDFcbiAgICAgICAgY29sdW1uX2FycmF5W2NvbHVtbl9jb3VudF0gPSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gVXNlZCB0byB2aXN1YWxpemUgaW1hZ2UgZm9yIGRlYnVnZ2luZywgY2FuIGJlIGRpc2NhcmRlZFxuICAgICAgICBpbWdEYXRhLmRhdGFbaV0gPSAwO1xuICAgICAgICBpbWdEYXRhLmRhdGFbaSsxXSA9IDA7XG4gICAgICAgIGltZ0RhdGEuZGF0YVtpKzJdID0gMDtcbiAgICAgICAgLy8gQ29udmVydCB0byBlaXRoZXIgMCBvciAxXG4gICAgICAgIGNvbHVtbl9hcnJheVtjb2x1bW5fY291bnRdID0gMDtcbiAgICAgIH1cbiAgICAgIGltZ0RhdGEuZGF0YVtpICsgM10gPSAyNTU7XG4gICAgICBjb2x1bW5fY291bnQrKztcbiAgICB9XG5cbiAgICAvLyBMYXp5IGFkZCBmaW5hbCByb3cgZW1wdHlcbiAgICB2YXIgZmluYWxfcm93ID0gQXJyYXkoMjgpO1xuICAgIGZvciAodmFyIGkgPTA7IGk8IGZpbmFsX3Jvdy5sZW5ndGg7IGkrKyl7XG4gICAgICBmaW5hbF9yb3dbaV0gPSAwO1xuICAgIH1cbiAgICBpbWFnZV9hcnJheVsyN10gPSBmaW5hbF9yb3c7XG5cbiAgICAvLyBQcmludCBvdXQgYXJyYXlcbiAgICAvLyBjb25zb2xlLmxvZyhpbWFnZV9hcnJheSk7XG5cbiAgICBjY3R4LnB1dEltYWdlRGF0YShpbWdEYXRhLCAwLCAwKTtcbiAgICBsZXQgbmV3SW1hZ2UgPSBjYW52YXM7XG4gICAgcmV0dXJuIFtuZXdJbWFnZSwgaW1hZ2VfYXJyYXldO1xuICB9XG5cbiAgY29uc3QgcmVzdWx0X2dyYXBoID0gKHJlc3VsdEFycmF5KSA9PiB7XG4gICAgcmV0dXJuKDxkaXY+XG4gICAgICB7cmVzdWx0QXJyYXkubWFwKChyZXN1bHQsIGluZGV4KSA9PiAoXG4gICAgICAgIDxwIGtleT17aW5kZXh9Pk51bWJlcjoge3Jlc3VsdFswXX0gPGJyLz5Db25maWRlbmNlOiB7cmVzdWx0WzFdfSU8L3A+XG4gICAgKSl9XG4gICAgPC9kaXY+XG4gICAgKVxuICB9XG5cbiAgcmV0dXJuKFxuICAgIDxkaXY+XG4gICAgICA8U2lnbmF0dXJlQ2FudmFzXG4gICAgICAgICAgICByZWYgPSB7c2lnQ2FudmFzfVxuICAgICAgICAgICAgcGVuQ29sb3I9J2JsYWNrJ1xuICAgICAgICAgICAgdmVsb2NpdHlGaWx0ZXJXZWlnaHQ9JzAnXG4gICAgICAgICAgICBtYXhXaWR0aD0ge2JydXNoU2l6ZX1cbiAgICAgICAgICAgIGRvdFNpemU9JzAnXG4gICAgICAgICAgICBjYW52YXNQcm9wcz17e1xuICAgICAgICAgICAgICB3aWR0aDogY2FudmFzV2lkdGgsXG4gICAgICAgICAgICAgIGhlaWdodDogY2FudmFzV2lkdGgsXG4gICAgICAgICAgICAgIGNsYXNzTmFtZTogJ3NpZ25hdHVyZUNhbnZhcydcbiAgICAgICAgICAgIH19IC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImJ1dHRvbi13cmFwcGVyXCI+XG4gICAgICAgIDxCdXR0b24gb25DbGljaz17Y2xlYXJQYWR9IGlzQ2xlYXI9XCJ0cnVlXCI+Y2xlYXI8L0J1dHRvbj5cbiAgICAgICAgPEJ1dHRvbiBvbkNsaWNrPXtzdWJtaXRQYWR9PnN1Ym1pdDwvQnV0dG9uPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgcGFkZGluZzo1dmhcbiAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8L2Rpdj5cbiAgICAgIHtyZXN1bHRBcnJheSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8YT5Zb3VyIHJlc3VsdDogPC9hPlxuICAgICAgICAgIDxhPntyZXN1bHRfZ3JhcGgocmVzdWx0QXJyYXkpfTwvYT5cbiAgICAgICAgPC8+XG4gICAgICApIDogbnVsbH1cblxuICAgICAge2ltYWdlVVJMID8gKFxuICAgICAgICA8PlxuICAgICAgICAgIDxhPlByb2Nlc3NlZCBEaWdpdDwvYT5cbiAgICAgICAgICA8aW1nXG4gICAgICAgICAgICBzcmM9e2ltYWdlVVJMfVxuICAgICAgICAgICAgYWx0PVwibXkgc2lnbmF0dXJlXCJcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICAgICAgICAgICAgbWFyZ2luOiBcIjAgYXV0b1wiLFxuICAgICAgICAgICAgICBib3JkZXI6IFwiMXB4IHNvbGlkIGJsYWNrXCIsXG4gICAgICAgICAgICAgIHdpZHRoOiBcIjE1MHB4XCJcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApIDogbnVsbH1cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19 */\\n/*@ sourceURL=/Users/kietho/Repos/stuffbykiet.com/pages/projects/components/DrawingCanvas.js */\")), resultArray ? __jsx(React.Fragment, null, __jsx(\"a\", null, \"Your result: \"), __jsx(\"a\", null, result_graph(resultArray))) : null, imageURL ? __jsx(React.Fragment, null, __jsx(\"a\", null, \"Processed Digit\"), __jsx(\"img\", {\n    src: imageURL,\n    alt: \"my signature\",\n    style: {\n      display: \"block\",\n      margin: \"0 auto\",\n      border: \"1px solid black\",\n      width: \"150px\"\n    }\n  })) : null);\n}","map":{"version":3,"sources":["/Users/kietho/Repos/stuffbykiet.com/pages/projects/components/DrawingCanvas.js"],"names":["useState","useRef","useEffect","SignatureCanvas","Button","DrawingCanvas","sigCanvas","imageURL","setImageURL","resultArray","setResultArray","height","setHeight","width","setWidth","document","children","clientHeight","clientWidth","canvasWidth","Math","min","brushSize","toString","clearPad","current","clear","submitPad","submittedImage","getTrimmedCanvas","result","processImage","apiCall","toDataURL","image_array","model_url","xhr","XMLHttpRequest","withCredentials","addEventListener","responseText","reponse","JSON","parse","processResult","open","send","unsorted_array","sorted_array","Array","length","i","index","indexOf","max","confidence","toFixed","img","canvas","createElement","scale","cctx","getContext","imageSmoothingEnabled","scaled_width","scaled_height","dx","dy","drawImage","column_count","row_count","column_array","imgData","getImageData","data","final_row","putImageData","newImage","result_graph","map","className","display","margin","border"],"mappings":"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","sourcesContent":["import {useState, useRef, useEffect} from 'react';\nimport SignatureCanvas from 'react-signature-canvas'\nimport Button from '../../../components/Button';\n\n\nexport default function DrawingCanvas(){\n  // useStates\n  const sigCanvas = useRef({});\n  const [imageURL, setImageURL] = useState(null);\n  const [resultArray, setResultArray] = useState(null);\n  const [height, setHeight] = useState(null)\n  const [width, setWidth] = useState(null)\n  // Canvas Configuration\n\n  if (process.browser) {\n    useEffect(() => setHeight(document.children[0].clientHeight), [document.children[0].clientHeight])\n    useEffect(() => setWidth(document.children[0].clientWidth), [document.children[0].clientWidth])\n  }\n  const canvasWidth =  Math.min(height, width)/2;\n  const brushSize = (canvasWidth/30).toString(10);\n\n  // Functions\n  const clearPad = () => {\n    sigCanvas.current.clear();\n    setImageURL(null);\n    setResultArray(null);\n  };\n  const submitPad = () => {\n    let submittedImage = sigCanvas.current.getTrimmedCanvas();\n    let result = processImage(submittedImage)\n    apiCall(result[1]);\n    setImageURL(result[0].toDataURL(\"image/png\"));\n  };\n\n  // Query our AI model\n  const apiCall = (image_array) => {\n    const model_url = '/api/v1/models/digit_model:predict';\n    var xhr = new XMLHttpRequest();\n    xhr.withCredentials = false;\n    // get a callback when the server responds\n    xhr.addEventListener('load', () => {\n      // Get results and process\n      if (xhr.responseText){\n        let reponse = JSON.parse(xhr.responseText);\n        processResult(reponse)\n      }\n    });\n    xhr.open('POST', model_url);\n    xhr.send(JSON.stringify({ \"instances\": image_array }));\n  }\n\n  const processResult = (reponse) => {\n    let unsorted_array = reponse[\"predictions\"][0];\n    let sorted_array = Array(unsorted_array.length);\n    // Get all results above 0.00%\n    for (var i = 0; i< unsorted_array.length; i++){\n      let index = unsorted_array.indexOf(Math.max(...unsorted_array));\n      let confidence = (unsorted_array[index]*100).toFixed(2)\n      if (confidence > 0){\n        sorted_array[i] = [index, confidence];\n        unsorted_array[index] = 0;\n      }\n    }\n    setResultArray(sorted_array);\n  }\n  const processImage = (img) => {\n    // Scale image\n    const canvas =document.createElement('canvas');\n    const scale = Math.min(20/img.width, 20/img.height);\n    canvas.width = 28;\n    canvas.height = 28;\n    const cctx = canvas.getContext('2d');\n    cctx.imageSmoothingEnabled = true;\n    const scaled_width = img.width*scale;\n    const scaled_height = img.height*scale;\n    const dx = (28 - scaled_width)/2;\n    const dy = (28 - scaled_height)/2;\n    cctx.drawImage(img, dx, dy, scaled_width, scaled_height);\n\n\n    // Turn into 2D array of 28x28\n    const image_array = Array(28);\n    var column_count = 0\n    var row_count = 0\n    var column_array = Array(28);\n\n    // invert colors, make black and white and remove alpha\n    var imgData = cctx.getImageData(0, 0, canvas.width, canvas.height);\n    var i;\n    for (i = 0; i < imgData.data.length; i += 4) {\n\n      // Fill array\n      if (column_count >= 28){\n        column_count = 0;\n        image_array[row_count] = column_array;\n        // Reset column_array\n        column_array = Array(28);\n        row_count++;\n      }\n\n      if (imgData.data[i + 3] > 0){\n        // Used to visualize image for debugging, can be discarded\n        imgData.data[i] = 255;\n        imgData.data[i+1] = 255;\n        imgData.data[i+2] = 255;\n        // Convert to either 0 or 1\n        column_array[column_count] = 1;\n      } else {\n        // Used to visualize image for debugging, can be discarded\n        imgData.data[i] = 0;\n        imgData.data[i+1] = 0;\n        imgData.data[i+2] = 0;\n        // Convert to either 0 or 1\n        column_array[column_count] = 0;\n      }\n      imgData.data[i + 3] = 255;\n      column_count++;\n    }\n\n    // Lazy add final row empty\n    var final_row = Array(28);\n    for (var i =0; i< final_row.length; i++){\n      final_row[i] = 0;\n    }\n    image_array[27] = final_row;\n\n    // Print out array\n    // console.log(image_array);\n\n    cctx.putImageData(imgData, 0, 0);\n    let newImage = canvas;\n    return [newImage, image_array];\n  }\n\n  const result_graph = (resultArray) => {\n    return(<div>\n      {resultArray.map((result, index) => (\n        <p key={index}>Number: {result[0]} <br/>Confidence: {result[1]}%</p>\n    ))}\n    </div>\n    )\n  }\n\n  return(\n    <div>\n      <SignatureCanvas\n            ref = {sigCanvas}\n            penColor='black'\n            velocityFilterWeight='0'\n            maxWidth= {brushSize}\n            dotSize='0'\n            canvasProps={{\n              width: canvasWidth,\n              height: canvasWidth,\n              className: 'signatureCanvas'\n            }} />\n      <div className=\"button-wrapper\">\n        <Button onClick={clearPad} isClear=\"true\">clear</Button>\n        <Button onClick={submitPad}>submit</Button>\n        <style jsx>{`\n          padding:5vh\n          `}</style>\n      </div>\n      {resultArray ? (\n        <>\n          <a>Your result: </a>\n          <a>{result_graph(resultArray)}</a>\n        </>\n      ) : null}\n\n      {imageURL ? (\n        <>\n          <a>Processed Digit</a>\n          <img\n            src={imageURL}\n            alt=\"my signature\"\n            style={{\n              display: \"block\",\n              margin: \"0 auto\",\n              border: \"1px solid black\",\n              width: \"150px\"\n            }}\n          />\n        </>\n      ) : null}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}