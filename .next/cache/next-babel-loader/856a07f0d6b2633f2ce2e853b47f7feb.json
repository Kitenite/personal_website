{"ast":null,"code":"const ImageProcessor = img => {\n  // Scale image\n  const scale = Math.min(20 / img.width, 20 / img.height);\n  const canvas = document.createElement('canvas');\n  canvas.width = 28;\n  canvas.height = 28;\n  const cctx = canvas.getContext('2d');\n  cctx.imageSmoothingEnabled = true;\n  const scaled_width = img.width * scale;\n  const scaled_height = img.height * scale;\n  const dx = (28 - scaled_width) / 2;\n  const dy = (28 - scaled_height) / 2;\n  cctx.drawImage(img, dx, dy, scaled_width, scaled_height); // Turn into 2D array of 28x28\n\n  const image_array = Array(28);\n  var column_count = 0;\n  var row_count = 0;\n  var column_array = Array(28); // invert colors, make black and white and remove alpha\n\n  var imgData = cctx.getImageData(0, 0, canvas.width, canvas.height);\n  var i;\n\n  for (i = 0; i < imgData.data.length; i += 4) {\n    // Fill array\n    if (column_count >= 28) {\n      column_count = 0;\n      image_array[row_count] = column_array; // Reset column_array\n\n      column_array = Array(28);\n      row_count++;\n    }\n\n    if (imgData.data[i + 3] > 0) {\n      // Used to visualize image for debugging, can be discarded\n      imgData.data[i] = 255;\n      imgData.data[i + 1] = 255;\n      imgData.data[i + 2] = 255; // Convert to either 0 or 1\n\n      column_array[column_count] = 1;\n    } else {\n      // Used to visualize image for debugging, can be discarded\n      imgData.data[i] = 0;\n      imgData.data[i + 1] = 0;\n      imgData.data[i + 2] = 0; // Convert to either 0 or 1\n\n      column_array[column_count] = 0;\n    }\n\n    imgData.data[i + 3] = 255;\n    column_count++;\n  } // Lazy add final row empty\n\n\n  var final_row = Array(28);\n\n  for (var i = 0; i < final_row.length; i++) {\n    final_row[i] = 0;\n  }\n\n  image_array[27] = final_row; // Print out array\n  // console.log(image_array);\n\n  cctx.putImageData(imgData, 0, 0);\n  let newImage = canvas;\n  return [newImage, image_array];\n};\n\nexport default ImageProcessor;","map":null,"metadata":{},"sourceType":"module"}