{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction FadeInSection(props) {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isVisible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var domRef = React.useRef();\n  React.useEffect(function () {\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        return setVisible(entry.isIntersecting);\n      });\n    });\n    observer.observe(domRef.current);\n    return function () {\n      return observer.unobserve(domRef.current);\n    };\n  }, []);\n  return __jsx(\"div\", {\n    ref: domRef,\n    className: \"jsx-3881756070\" + \" \" + \"fade-in-section \".concat(isVisible ? 'is-visible' : '')\n  }, props.children, __jsx(_JSXStyle, {\n    id: \"3881756070\"\n  }, [\".fade-in-section.jsx-3881756070{opacity:0;-webkit-transform:translateY(20vh);-ms-transform:translateY(20vh);transform:translateY(20vh);visibility:hidden;-webkit-transition:opacity 1200ms ease-out,-webkit-transform 600ms ease-out, visibility 1200ms ease-out;-webkit-transition:opacity 1200ms ease-out,transform 600ms ease-out, visibility 1200ms ease-out;transition:opacity 1200ms ease-out,transform 600ms ease-out, visibility 1200ms ease-out;will-change:opacity,transform,visibility;}\", \".fade-in-section.is-visible.jsx-3881756070{opacity:1;-webkit-transform:none;-ms-transform:none;transform:none;visibility:visible;}\"]));\n}\n\nexport default FadeInSection;","map":null,"metadata":{},"sourceType":"module"}